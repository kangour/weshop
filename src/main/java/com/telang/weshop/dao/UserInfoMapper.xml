<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 命名空间指向dao中的持久类 -->
<mapper namespace="com.telang.weshop.dao.UserInfoMapper">
	<!-- id对应接口方法,resultType表示结果集的类型，所以呀要指向实体类,parameterType表示形式参数类型  -->
	<select id="findUserById" resultType="com.telang.weshop.entity.UserInfo"
		parameterType="int">
		<!--#{}大括号中的名称随意写只是表示一个占位符,不过建议写成属性名 -->
		select * from user where id =#{id}
<!-- 	</select> -->
<!-- 	<!--这里返回的类型虽然是list,resultType表示list泛型的类型 --> -->
<!-- 	<select id="findUserByUsername" resultType="com.baoyuan.domain.User" -->
<!-- 		parameterType="java.lang.String"> -->
<!-- 		<!--这里必须写value,${value}表示拼接字符串,如果用其他会报错,用#{}只是表示占位符,可以在调用时传"%条件%的参数" --> -->
<!-- 		select * from user where username like '%${value}%' -->
<!-- 	</select> -->
<!-- 	<insert id="saveUser" parameterType="com.baoyuan.domain.User"> -->
<!-- 		<!--配置在插入一条数据后返回主键,会自动保存到pojo对象的主键属性中 --> -->
<!-- 		<selectKey keyProperty="id" resultType="java.lang.Integer" -->
<!-- 			order="AFTER"> -->
<!-- 			select LAST_INSERT_ID() -->
<!-- 			<!--必须是主键自增长 是mysql的函数，返回auto_increment自增列新记录id值 --> -->
<!-- 		</selectKey> -->
<!-- 		<!-- <selectKey resultType="java.lang.String" order="BEFORE" keyProperty="id">  -->
<!-- 			select uuid() 需要增加通过select uuid()得到uuid值（前提是用户表中的id必须是字符串类型） </selectKey> --> -->
<!-- 		<!--这里由于 parameterType形式参数的类型是user,所以这里#{}大括号中不能随便写,写的是user的属性 --> -->
<!-- 		insert INTO user(username,birthday,sex,address) -->
<!-- 		VALUES(#{username},#{birthday},#{sex},#{address}) -->
<!-- 	</insert> -->
<!-- 	<delete id="deleteUserById" parameterType="int"> -->
<!-- 		delete from user where id =#{id} -->
<!-- 	</delete> -->
<!-- 	<update id="updateUserById" parameterType="com.baoyuan.domain.User"> -->
<!-- 		update user set -->
<!-- 		username=#{username},birthday=#{birthday},sex=#{sex},address=#{address} -->
<!-- 		where id=#{id} -->
<!-- 	</update> -->
</mapper>